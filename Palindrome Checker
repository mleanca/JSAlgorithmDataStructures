** start of undefined **

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link rel="stylesheet" href="./styles.css"></link>
    <title>Palindrome Checker</title>
  </head>
  <body>
    <main class="container">
      <div>
        <h1 class="title">Palindrome Checker</h1>
      </div>
      <div class="palindrome-div">
        <h2><label for="text-input">enter word(s) to check for a palindrome:</label></h2>
        <input class="palindrome-input" id="text-input" type="text" placeholder="nurses run" required value type="text"></input>
        <button class="palindrome-btn" id="check-btn">Check</button>
      </div>
      <div class="results-div hidden" id="result"></div>
      <div class="palindrome-definition-div">
        <h3 class="palindrome-definition">palindrome /ˈpalɪndrəʊm/ a word, phrase, or sequence that reads the same backwards as forwards, e.g. madam or nurses run.</h3>
      </div>
    </main>
    <script src="./script.js"></script>
  </body>
</html>

** end of undefined **

** start of undefined **

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: #301934;
  color: white;
  font-family: Georgia, Arial;
}

.container {
  width: 100%;
  min-height: 100vh;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: colummn;
}

.title {
  text-align: center;
  padding: 10px 0;
  font-size: 2.5rem;
  margin-bottom: 20px;
}

.palindrome-div {
  width: min(100vw, 450px);
  min-height: 100px;
  border-radius: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  padding: 20px;
  margin: 10px 0;
  background-color: #fcae1e;
  box-shadow: 0 6px 6px #ec9706;
}

h1, h2, h3 {
  display: block;
  margin-block-start: 1em;
  margin-block-end: 1em;
  margin-inline-start: 0px;
  margin-inline-end: 0px;
}

.palindrome-btn {
  width: 90px;
  border: none;
  padding: 10px;
  border-radius: 12px;
  cursor: pointer;
}

.palindrome-input {
  height: 30px;
  width: 250px;
  text-align: center;
  font-size: 1.2rem;
  margin: 10px;
  border: none;
  border-bottom: 2px solid #301934;
}

.palindrome-input:focus {
  border-bottom: #ec9706;
}

/*found in script.js*/
.user-input {
  font-size: 1.4rem;
  margin-top: 10px;
  text-align: center;
}

.results-div {
  overflow-y: auto;
  word-wrap: break-word;
  min-height: 100px;
  color: #ec9706;
}

.hidden {
  display: none;
}

.palindrome-definition-div {
  width: min(100vw, 450px);
  font-size: 1,4rem;
  min-height: 140px;
  background-color: #0a0a23;
  margin-top: 20px;
  padding: 20px;
  border-radius: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.palindrome-definition {
  vertical-align: middle;
  text-align: center;
}

** end of undefined **

** start of undefined **

const userInput = document.getElementById('text-input');
const checkPalindromeButton = document.getElementById('check-btn');
const resultsDiv = document.getElementById('result');

const checkForPalindrome = input => {
  const originalInput = input;
  if (input === '') {
    alert('Please input a value');
    return;
  }
  resultsDiv.replaceChildren();

//checks palindrome
  const lowerCaseStr = input.replace(/[^A-Za-z0-9]/gi, '').toLowerCase();
  let resultMessage = `<strong>${originalInput}</strong> ${lowerCaseStr === [...lowerCaseStr].reverse().join('') ? 'is' : 'is not'} a palindrome.`;

  const hTag = document.createElement('h3');
  hTag.className = 'user-input';
  hTag.innerHTML = resultMessage;
  resultsDiv.appendChild(hTag);

  //Shows the result
  resultsDiv.classList.remove('hidden');
};

checkPalindromeButton.addEventListener('click', () => {
  checkForPalindrome(userInput.value);
  userInput.value = '';
});

userInput.addEventListener('keydown', e => {
  if (e.key === 'Enter') {
    checkForPalindrome(userInput.value);
    userInput.value = '';
  }
});

** end of undefined **

